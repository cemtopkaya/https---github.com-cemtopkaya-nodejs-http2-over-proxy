import * as util from '../util';
import config from '../config';
import * as protocols from '../rules/protocols';
const ORG_RE = /^@[\w-]+$/;
const WHISLTE_PLUGIN_RE = /^whistle\.[a-z\d_\-]+$/;
const HTTP_RE = /^https?:\/\//i;
const PLUGIN_NAME_RE = /^(?:@[\w-]+\/)?whistle\.[a-z\d_\-]+$/;
export function isOrgModule(name) {
    return ORG_RE.test(name);
}
export const isPluginName = function (name) {
    return PLUGIN_NAME_RE.test(name);
};
export function isWhistleModule(name) {
    return WHISLTE_PLUGIN_RE.test(name);
}
export function getHomePageFromPackage(pkg) {
    if (HTTP_RE.test(pkg.homepage)) {
        return pkg.homepage;
    }
    return extractUrl(pkg.repository) || '';
}
function extractUrl(repository) {
    if (!repository || repository.type != 'git' || typeof repository.url !== 'string') {
        return;
    }
    let url = repository.url.replace(/^git\+/i, '');
    if (!HTTP_RE.test(url)) {
        url = url.replace(/^git@([^:]+):/, 'http://$1/');
    }
    return url.replace(/\.git\s*$/i, '');
}
export const parseValues = function (val) {
    if (val) {
        val = util.parseJSON(val);
    }
    if (!val) {
        return '';
    }
    Object.keys(val).forEach(function (key) {
        val[key] = util.toString(val[key]);
    });
    return val;
};
export const getPluginHomepage = function (pkg) {
    const url = pkg.pluginHomepage || pkg.pluginHomePage;
    return typeof url === 'string' ? url : undefined;
};
export const excludePlugin = function (name) {
    if (protocols.contains(name) || (config.allowPluginList.length && config.allowPluginList.indexOf(name) === -1)) {
        return true;
    }
    return config.blockPluginList.length && config.blockPluginList.indexOf(name) !== -1;
};
