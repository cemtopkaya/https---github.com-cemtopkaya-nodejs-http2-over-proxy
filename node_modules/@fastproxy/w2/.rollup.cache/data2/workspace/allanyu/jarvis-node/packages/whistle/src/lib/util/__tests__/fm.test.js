import path from 'path';
import assert from 'assert';
import { describe, test } from 'vitest';
import * as fm from '../file-mgr';
describe('file-manage', () => {
    test('ok', () => {
        const file1 = path.join(__dirname, '../../../../__tests__/assets/files/1.txt');
        const file2 = path.join(__dirname, '../../../../__tests__/assets/files/2.txt');
        const file3 = path.join(__dirname, '../../../../__tests__/assets/files/3.txt');
        const path1 = file1 + '|' + file2;
        const path2 = file2 + '|' + file3;
        const path3 = file3 + '|' + file1;
        fm.readFile(path1, function (result) {
            assert(result.length === 4, 'Error');
        });
        fm.readFileList([null, null, path1, path2, null], function (result) {
            assert(result.length === 5, 'Error');
        });
        fm.readFileList(null, function (result) {
            assert(!result, 'Error');
        });
        fm.readFileList([null, null, null], function (result) {
            assert(result.length === 3, 'Error');
        });
        fm.readFileList([], function (result) {
            assert(!result, 'Error');
        });
        fm.readFilesText([null, null, path1, path2, null], function (result) {
            assert(result[2] === '1\r\n2', 'Error');
        });
        fm.readFilesText(null, function (result) {
            assert(!result, 'Error');
        });
        fm.readFilesText([], function (result) {
            assert(!result, 'Error');
        });
        fm.readFilesText([null, null, null], function (result) {
            assert(result.length === 3, 'Error');
        });
        fm.readFile(path1, function (result) {
            assert(result.length === 4, 'Error');
        });
        fm.readFileText(path3, function (result) {
            assert(result === '3\r\n1', 'Error');
        });
    });
});
