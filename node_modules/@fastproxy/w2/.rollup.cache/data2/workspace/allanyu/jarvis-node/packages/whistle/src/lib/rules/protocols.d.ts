export declare const protocols: string[];
export declare const pureResProtocols: string[];
export declare const resProtocols: string[];
export declare const aliasProtocols: {
    readonly ruleFile: "rulesFile";
    readonly ruleScript: "rulesFile";
    readonly rulesScript: "rulesFile";
    readonly reqScript: "rulesFile";
    readonly reqRules: "rulesFile";
    readonly resRules: "resScript";
    readonly pathReplace: "urlReplace";
    readonly download: "attachment";
    readonly skip: "ignore";
    readonly 'http-proxy': "proxy";
    readonly 'xhttp-proxy': "xproxy";
    readonly status: "statusCode";
    readonly hosts: "host";
    readonly xhost: "host";
    readonly html: "htmlAppend";
    readonly js: "jsAppend";
    readonly reqMerge: "params";
    readonly css: "cssAppend";
    readonly excludeFilter: "filter";
    readonly includeFilter: "filter";
    readonly P: "G";
};
export declare const reqProtocols: string[];
export declare const getRuleProto: (rule: any) => string | undefined;
export declare const multiMatchs: string[];
export declare function getRules(): any;
export declare function isBinProtocol(protocol: any): 1 | 3 | 2 | undefined;
export declare function resetRules(rules: any): any;
export declare function isResRule(protocol: any): boolean;
export declare function isWebProtocol(protocol: any): boolean;
export declare function isWebsocketProtocol(protocol: any): boolean;
export declare function isFileProxy(protocol: any): boolean;
export declare function contains(name: any): boolean;
