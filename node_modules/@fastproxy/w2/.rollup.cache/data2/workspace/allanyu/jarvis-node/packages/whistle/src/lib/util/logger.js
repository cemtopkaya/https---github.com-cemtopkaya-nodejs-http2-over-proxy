import util from 'util';
const MAX_LENGTH = 360;
const MIN_LENGTH = 280;
const COUNT = 100;
const LEVELS = ['fatal', 'error', 'warn', 'info', 'debug'];
const logger = {};
let count = 0;
let logs = [];
logger.getLatestId = function () {
    const last = logs[logs.length - 1];
    return last && last.id;
};
logger.getLogs = (startTime, count) => {
    const len = logs.length;
    if (!len || startTime == -1) {
        return [];
    }
    count = Math.min(count || COUNT, len);
    if (startTime === 0) {
        return logs.slice(-1);
    }
    if (startTime != -2 && startTime) {
        for (let i = 0; i < len; i++) {
            const log = logs[i];
            if (log.id === startTime) {
                ++i;
                return logs.slice(i, i + count);
            }
        }
    }
    return logs.slice(0, count);
};
function doLog(text, level) {
    const now = Date.now();
    logs.push({
        id: now + '-' + ++count,
        date: now,
        level: level,
        text: text
    });
    const len = logs.length;
    if (len > MAX_LENGTH) {
        logs = logs.slice(len - MIN_LENGTH, len);
    }
}
LEVELS.forEach(function (level) {
    logger[level] = function (msg, ...args) {
        if (msg == null && args.length < 1) {
            return;
        }
        doLog(util.format.apply(null, [msg, ...args]), level);
    };
});
export default logger;
