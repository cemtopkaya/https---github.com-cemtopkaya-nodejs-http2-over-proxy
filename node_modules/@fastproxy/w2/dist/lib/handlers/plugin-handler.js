"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pluginHandler = void 0;
const tslib_1 = require("tslib");
const util = tslib_1.__importStar(require("../util"));
const plugins_1 = require("../plugins");
const protoMgr = tslib_1.__importStar(require("../rules/protocols"));
function pluginHandler(req, res, next) {
    const protocol = req.options && req.options.protocol;
    req.isWebProtocol = protoMgr.isWebProtocol(protocol);
    const plugin = !req.isWebProtocol && plugins_1.pluginMgr.getPlugin(protocol);
    if (!plugin) {
        return next();
    }
    plugins_1.pluginMgr.loadPlugin(req.isPluginReq ? null : plugin, function (err, ports) {
        if (err) {
            res.response(util.wrapGatewayError(err));
            return;
        }
        if (!ports.port) {
            req.isWebProtocol = true;
            req.options = util.parseUrl(req.fullUrl);
            return next();
        }
        req.customParser = util.getParserStatus(req);
        if (req.customParser) {
            req.initCustomParser();
        }
        const fullUrl = req.options._realUrl || req.fullUrl;
        const options = util.parseUrl(fullUrl);
        plugins_1.pluginMgr.addRuleHeaders(req, req.rules);
        options.protocol = 'http:';
        options.host = '127.0.0.1';
        options.port = ports.port;
        options.href = util.changePort(fullUrl, ports.port);
        options.localDNS = true;
        options.isPlugin = true;
        req.request(options);
    });
}
exports.pluginHandler = pluginHandler;
