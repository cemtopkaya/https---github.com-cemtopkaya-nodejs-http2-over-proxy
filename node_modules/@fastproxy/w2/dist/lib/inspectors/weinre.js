"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inspectWeire = void 0;
const tslib_1 = require("tslib");
const pipestream_1 = require("pipestream");
const import_pkg_1 = require("../import-pkg");
const util = tslib_1.__importStar(require("../util"));
const config_1 = tslib_1.__importDefault(require("../config"));
const weinreScriptFile = import_pkg_1.path.join(config_1.default.ASSESTS_PATH, 'js/weinre.js');
const weinreScript = import_pkg_1.fs.readFileSync(weinreScriptFile, { encoding: 'utf8' });
const weinreHtmlScript = '\r\n<script>' + weinreScript + '</script>\r\n';
function getScript(host, name, isHtml, req) {
    host = util.getInternalHost(req, host);
    const weinrePath = (req.isHttps ? 'https://' : 'http://') + host + config_1.default.WEBUI_PATH + 'weinre.' + config_1.default.port;
    const result = isHtml ? weinreHtmlScript : weinreScript;
    const weinreUrl = weinrePath + '/target/target-script-min.js#' + (name || 'anonymous');
    return result.replace('$WEINRE_PATH', weinrePath).replace('$WEINRE_URL', weinreUrl);
}
function inspectWeire(req, res, next) {
    if (req.rules.weinre) {
        util.disableReqCache(req.headers);
        const host = req.headers.host;
        res.on('src', function (_res) {
            const isHtml = util.supportHtmlTransform(_res, req);
            if (!isHtml && util.getContentType(_res.headers) !== 'JS') {
                return;
            }
            !req.enable.keepAllCSP && util.disableCSP(_res.headers);
            !req._customCache && util.disableResStore(_res.headers);
            const name = util.getPath(util.rule.getMatcher(req.rules.weinre));
            const transform = new pipestream_1.Transform();
            transform._transform = function (chunk, _, callback) {
                if (!chunk) {
                    chunk = util.toBuffer(getScript(host, name, isHtml, req));
                }
                callback(null, chunk);
            };
            res.addZipTransform(transform, false, true);
        });
    }
    next();
}
exports.inspectWeire = inspectWeire;
