"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pipestream_1 = require("pipestream");
class SpeedTransform extends pipestream_1.Transform {
    constructor(options) {
        super();
        options = options || {};
        let value = (parseInt(options.speed) * 1000) / 8;
        if (value > 0) {
            this._speed = value;
        }
        if ((value = parseInt(options.delay)) > 0) {
            this._delay = value;
        }
    }
    _transform(chunk, _encoding, callback) {
        const cb = () => {
            if (chunk && this._speed) {
                setTimeout(function () {
                    callback(null, chunk);
                }, Math.round((chunk.length * 1000) / this._speed));
            }
            else {
                callback(null, chunk);
            }
        };
        if (this._delay) {
            const delay = this._delay;
            this._delay = null;
            setTimeout(cb, delay);
            return;
        }
        cb();
    }
}
exports.default = SpeedTransform;
