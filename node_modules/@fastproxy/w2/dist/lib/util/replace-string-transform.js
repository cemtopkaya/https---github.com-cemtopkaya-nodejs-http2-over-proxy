"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pipestream_1 = require("pipestream");
class ReplaceStringTransform extends pipestream_1.Transform {
    constructor(str, value) {
        super();
        this._transform = (chunk, _encoding, callback) => {
            if (chunk != null) {
                chunk = this._rest + chunk;
                const minIndex = chunk.length + 1 - this._length;
                let index = chunk.lastIndexOf(this._str);
                if (index != -1) {
                    index = Math.max(minIndex, index + this._length);
                }
                else {
                    index = minIndex;
                }
                this._rest = chunk.substring(index);
                chunk = chunk.substring(0, index);
            }
            else {
                chunk = this._rest;
            }
            callback(null, replace(chunk, this._str, this._value));
        };
        this._str = str;
        this._length = this._str.length;
        this._value = value == null ? '' : value + '';
        this._rest = '';
    }
}
exports.default = ReplaceStringTransform;
function replace(chunk, str, value) {
    return chunk ? chunk.split(str).join(value) : null;
}
